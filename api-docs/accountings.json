{
  "openapi": "3.0.1",
  "info": {
    "title": "Accounting API",
    "description": "The Accounting service",
    "version": "v1"
  },
  "paths": {
    "/api/v1/AccountingBooking": {
      "get": {
        "tags": [
          "AccountingBooking"
        ],
        "summary": "Retrieves a list of bank books based on the provided search criteria.",
        "parameters": [
          {
            "name": "BookingDate",
            "in": "query",
            "description": "Get or set the booking bank date for filtering booking banks.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SearchText",
            "in": "query",
            "description": "Gets or sets the search text for filtering results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "Gets or sets the offset for pagination.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "Gets or sets the limit for pagination. Default is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Gets or sets the fields to sort the results by.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of bank books.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBankBookDtoPaginatedResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBankBookDtoPaginatedResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBankBookDtoPaginatedResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No bank books found for the current user.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error occurred."
          }
        }
      }
    },
    "/api/v1/AccountingBooking/{bankBookId}": {
      "get": {
        "tags": [
          "AccountingBooking"
        ],
        "summary": "Retrieves the positions of a specific bank book.",
        "parameters": [
          {
            "name": "bankBookId",
            "in": "path",
            "description": "The unique identifier of the bank book.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "Gets or sets the offset for pagination.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "Gets or sets the limit for pagination. Default is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Gets or sets the fields to sort the results by.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the positions the bank book.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBankBookPositionDtoPaginatedResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBankBookPositionDtoPaginatedResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBankBookPositionDtoPaginatedResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User not authenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No positions found for the specified bank book.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error occurred."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetBankBookDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the bank book.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the bank book.",
            "nullable": true
          },
          "bookingDate": {
            "type": "string",
            "description": "Gets or sets the booking date of the bank book.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Represents a data transfer object for retrieving bank books."
      },
      "GetBankBookDtoPaginatedResponseDto": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetBankBookDto"
            },
            "description": "Gets or sets the collection of items in the current page.",
            "nullable": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationDto"
          }
        },
        "additionalProperties": false,
        "description": "Represents a paginated response containing a collection of items and pagination details."
      },
      "GetBankBookPositionDto": {
        "required": [
          "sellerName"
        ],
        "type": "object",
        "properties": {
          "bookingDate": {
            "type": "string",
            "description": "Gets or sets the booking date of the bank book position.",
            "format": "date-time"
          },
          "sellerName": {
            "type": "string",
            "description": "Gets or sets the name of the seller or vendor from whom the item was purchased.",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Gets or sets the monetary amount associated with this position.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Represents a position in a bank book, including details about the transaction, seller and date."
      },
      "GetBankBookPositionDtoPaginatedResponseDto": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetBankBookPositionDto"
            },
            "description": "Gets or sets the collection of items in the current page.",
            "nullable": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationDto"
          }
        },
        "additionalProperties": false,
        "description": "Represents a paginated response containing a collection of items and pagination details."
      },
      "PaginationDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Gets or sets the current page number.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets or sets the number of items per page.",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "description": "Gets or sets the total number of items available.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Represents pagination details for paginated responses."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  },
  "security": [
    {
      "bearer": [ ]
    }
  ]
}